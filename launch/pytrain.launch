<?xml version="1.0"?>
<launch>

    <!--Method to Generate Environment (Either generate or load)-->
    <arg name="generate_env" default="true" />
    <arg name="load_env" default="false" />
    <arg name="env_config" default="gen_env_pybullet_params.yaml" />

    <arg name="config_file_train" default="$(find ros_pybullet_rl2)/config/non-ros/pyomnirobot_training_params.yaml" />
    <arg name="config_file_pybullet" default="$(find ros_pybullet_rl2)/config/non-ros/pyomnirobot_pybullet_params.yaml" />
    <arg name="config_file_env" default="$(find ros_pybullet_rl2)/config/$(arg env_config)" />

    <arg name="ros_pybullet_rl2_dir" default="$(find ros_pybullet_rl2)/src/ros_pybullet_rl2" />
    <arg name="main_dir" default="$(find ros_pybullet_rl2)"/>
    
    <arg name="robot_urdf_path" default="$(find omnirobot_v3)/urdf/omnirobot_v3_1LiDAR.urdf" />

    <!-- upload urdf model to ROS param server from its xacro file, remove if directly using .urdf robot model -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder $(arg robot_urdf_path)" /> 

    <!--train.py node-->
    <node pkg="ros_pybullet_rl2" type="ros_pybullet_train_node" name="training" output="screen" required="true">
        <rosparam file="$(arg config_file_train)" command="load" />
        <rosparam file="$(arg config_file_pybullet)" command="load" />
        <rosparam file="$(arg config_file_env)" command="load" />
        <param name="generate_env" value="$(arg generate_env)"/>
        <param name="load_env" value="$(arg load_env)"/>
        <param name="ros_pybullet_rl2_dir" value="$(arg ros_pybullet_rl2_dir)" />
        <param name="main_dir" value="$(arg main_dir)" />
        <!--param name="env_obj_path" value="$(arg env_obj_path)" /-->
        <param name="is_validate" value="False" />
    </node>

</launch>
